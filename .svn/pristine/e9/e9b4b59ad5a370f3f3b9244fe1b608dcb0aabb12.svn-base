package com.cms.util;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.Reader;
import java.io.StringReader;
import java.util.List;

import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.client.HttpClient;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.HttpClientBuilder;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class HttpUtil {
	
	static Logger logger = LoggerFactory.getLogger(HttpUtil.class);
	
	public static Response sendPost(String url, List<NameValuePair> params) throws Exception{
		
		logger.debug("Sending post request to {}", url);
		logger.debug("Request params {}",  new StringBuilder().append(params).toString());
		
		Response response = new Response();
		HttpClient httpClient = HttpClientBuilder.create().build();
		HttpPost post = new HttpPost(url);
		
		//Builder requestConfigBuilder = RequestConfig.custom();
		//requestConfigBuilder.setConnectionRequestTimeout(60000);

		post.setEntity(new UrlEncodedFormEntity(params));
		HttpResponse httpResponse = httpClient.execute(post);

		int errCode = httpResponse.getStatusLine().getStatusCode();
		String errMsg = httpResponse.getStatusLine().getReasonPhrase();
		String responseStr = "";
		if(errCode == 200){
			BufferedReader br = new BufferedReader(new InputStreamReader(httpResponse.getEntity().getContent()));
			
			StringBuffer strBuffer = new StringBuffer();
			char[] cBuff = new char[1];
			
			while((br.read(cBuff, 0, 1)) != -1){
				strBuffer.append(cBuff[0]);
			}
			
			responseStr = strBuffer.toString();
			response.setResponseReader(new StringReader(responseStr));
			
		}
		
		response.setStatus(0); //Success
		response.setHttpErrorCode(errCode);
		response.setHttpErrorMessage(errMsg);
		
		logger.debug("Leaving sendPost (respCode={},respMessage={},response={})",errCode,errMsg,responseStr);
		return response;
	}
	
	public static class Response{
		private int status;
		private String description;
		private int httpErrorCode;
		private String httpErrorMessage;
		private Object responseObject;
		private Reader responseReader;
		
		
		public int getStatus() {
			return status;
		}
		public void setStatus(int status) {
			this.status = status;
		}
		public String getDescription() {
			return description;
		}
		public void setDescription(String description) {
			this.description = description;
		}
		public int getHttpErrorCode() {
			return httpErrorCode;
		}
		public void setHttpErrorCode(int httpErrorCode) {
			this.httpErrorCode = httpErrorCode;
		}
		public String getHttpErrorMessage() {
			return httpErrorMessage;
		}
		public void setHttpErrorMessage(String httpErrorMessage) {
			this.httpErrorMessage = httpErrorMessage;
		}
		public Object getResponseObject() {
			return responseObject;
		}
		public void setResponseObject(Object responseObject) {
			this.responseObject = responseObject;
		}
		public Reader getResponseReader() {
			return responseReader;
		}
		public void setResponseReader(Reader responseReader) {
			this.responseReader = responseReader;
		}
	}
}
