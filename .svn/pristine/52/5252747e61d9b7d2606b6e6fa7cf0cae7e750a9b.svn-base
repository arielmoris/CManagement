package com.cms.controller;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import com.cms.dto.CreditTransferReportFilter;
import com.cms.dto.UserDto;
import com.cms.util.Constants;


@Controller
public class AccessController {
	
//	private LoginService loginService;
//	private AccountService accountService;
	
//	@Autowired
//	public AccessController(LoginService loginService, AccountService accountService){
//		this.loginService = loginService;
//		this.accountService = accountService;
//	}
	
//	Logger logger = LoggerFactory.getLogger(Constants.Loggers.CMS);
	
	@RequestMapping(value = "/login", method = RequestMethod.GET)
	public ModelAndView loginView(@RequestParam(value="language", required=false) String languageSelected, HttpServletRequest request){
//		if(session.getAttribute("userDto") != null){
//			return new ModelAndView(Constants.View.LOGIN);
//		}
//		
		Map<String, Object> model = new HashMap<>();
		
		UserDto userDtoSet = new UserDto();
		userDtoSet.setLanguageSelected(languageSelected);
		model.put("userDto", userDtoSet);
//		if(error != null){
//			model.put("error", "error.invalid_login");
//		}
//		if(expired != null){
//			model.put("error", "error.session_expired");
//		}
//		if(invalid != null){
//			model.put("error", "error.invalid_account");
//		}
//		if(logout != null){
//			model.put("msg", "success.logout");
//		}
		
		return new ModelAndView(Constants.View.LOGIN, model);
	}
	
//	@RequestMapping(value = "/login", method = RequestMethod.POST)
//	public String loginPost(@ModelAttribute User user, HttpServletRequest request){
//		logger.info("-------- LOGIN :: "+user.getUsername());
//		
//		HttpSession session = request.getSession();
//		String password = accountService.encryptPassword(user.getPassword());
//		user = loginService.checkLogin(user.getUsername(), password);
//		String view = "";
//		if(user != null){
//			if(user.getStatus() != Constants.UserStatus.BLOCKED){
//				user.setLastLogin(new Date());
//				user.setLastLoginIp(WebUtil.getClientIpAddr(request));
//				user.setSessionId(session.getId());
//				user.setIsLogged(true);
//				loginService.updateUser(user);
//				session.setAttribute("user", user);
//				view = "redirect:/"+Constants.View.SHOP_PROFILE;
//				logger.info("Message : Successful login");
//				new WebLogger().logData(WebUtil.getClientIpAddr(request), user.getUsername(), "User Logs in.");
//				
//				StringBuffer strBuffer = new StringBuffer("UPDATE_LOGIN_STATUS");
//				strBuffer.append("|").append(user.getShopId()).append("|").append(user.getUsername()).append("|").append(true);
//				
//				try {
//					Thread broadcastThread = new Thread(new BroadcastUtil(strBuffer.toString()));
//					broadcastThread.run();
//				} catch (Exception e) {
//					//e.printStackTrace();
//				}
//				
//			}else{
//				logger.info("Message : Account is suspended");
//				view = "redirect:/"+Constants.View.LOGIN+"?invalid";
//			}
//		}else{
//			logger.info("Message : Account is empty");
//			view = "redirect:/"+Constants.View.LOGIN+"?error";
//		}
//		return view;
//	}
//	
//	@RequestMapping(value = "/logout")
//	public String logout(HttpSession session){
//		User user = (User) session.getAttribute("user");
//		logger.info("-------- LOGOUT ::"+user.getUsername());
//		session.invalidate();
//		
//		Broadcaster b = BroadcasterFactory.getDefault().lookup("/"+user.getShopId()+"/"+user.getUsername());
//		if(b != null){
//			b.destroy();
//		}
//		
//		return "redirect:/"+Constants.View.LOGIN+"?logout";
//	}
//	
	
	@RequestMapping(value="/changePassword", method=RequestMethod.GET)
	public ModelAndView viewChangePassword(HttpServletRequest request){
		Map<String, Object> model = new HashMap<>();

		return new ModelAndView(Constants.View.CHANGE_PASSWORD, model);
	}
}
